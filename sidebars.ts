import type { SidebarsConfig } from '@docusaurus/plugin-content-docs';

const sidebars: SidebarsConfig = {
  docs: [
    'index', 
    {
    type: 'category',
    label: 'Concepts',
    items: [{ dirName: 'concepts', type: 'autogenerated' }]
  }, {
    type: 'category',
    label: 'Core',
    items: [{ dirName: 'core', type: 'autogenerated' }]
  }, {
    type: 'category',
    label: 'HTTP',
    items: [{ dirName: 'http', type: 'autogenerated' }]
  }, {
    type: 'category',
    label: 'Channel',
    items: [{ dirName: 'channels', type: 'autogenerated' }]
  }, {
    type: 'category',
    label: 'Queue',
    items: [{ dirName: 'queue', type: 'autogenerated' }]
  }, 
  'scheduled-tasks',
   {
    type: 'category',
    label: 'MCP',
    items: [{ dirName: 'mcp', type: 'autogenerated' }]
  }, 
  {
    type: 'category', 
    label: 'Runtimes',
    items: [
      {
        type: 'doc',
        id: 'runtimes/aws-lambda',
        label: 'AWS Lambda',
        customProps: {
          wirings: ['http', 'websocket', 'cron', 'queue']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/cloudflare-functions',
        label: 'Cloudflare Workers',
        customProps: {
          wirings: ['http', 'websocket', 'cron']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/express-middleware',
        label: 'Express Middleware',
        customProps: {
          wirings: ['http', 'websocket', 'sse', 'queue']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/fastify-plugin',
        label: 'Fastify Plugin',
        customProps: {
          wirings: ['http', 'websocket', 'sse', 'queue']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/nextjs-app',
        label: 'Next.js App',
        customProps: {
          wirings: ['http', 'sse']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/uws-handler',
        label: 'uWS Handler',
        customProps: {
          wirings: ['http', 'websocket', 'sse']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/ws-handler',
        label: 'WS Handler',
        customProps: {
          wirings: ['http', 'websocket']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/azure-functions',
        label: 'Azure Functions',
        customProps: {
          wirings: ['http', 'cron', 'queue']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/google-cloud-run-functions',
        label: 'Google Cloud Functions',
        customProps: {
          wirings: ['http', 'cron', 'queue']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/bullmq',
        label: 'BullMQ',
        customProps: {
          wirings: ['queue']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/pg-boss',
        label: 'PG Boss',
        customProps: {
          wirings: ['queue']
        }
      },
      {
        type: 'doc',
        id: 'runtimes/mcp-server',
        label: 'MCP Server',
        customProps: {
          wirings: ['mcp']
        }
      }
    ]
  }, {
    type: 'category',
    label: 'Custom Runtimes',
    items: [
      {
        type: 'doc',
        id: 'custom-runtimes/custom-http-runtime',
        label: 'Custom HTTP Runtime',
        customProps: {
          wirings: ['http']
        }
      },
      {
        type: 'doc',
        id: 'custom-runtimes/custom-websocket-handler',
        label: 'Custom WebSocket Handler',
        customProps: {
          wirings: ['websocket']
        }
      },
      {
        type: 'doc',
        id: 'custom-runtimes/custom-scheduler-handler',
        label: 'Custom Scheduler Handler',
        customProps: {
          wirings: ['cron']
        }
      },
      {
        type: 'doc',
        id: 'custom-runtimes/custom-queue-runtime',
        label: 'Custom Queue Runtime',
        customProps: {
          wirings: ['queue']
        }
      },
      {
        type: 'doc',
        id: 'custom-runtimes/custom-mcp-server',
        label: 'Custom MCP Server',
        customProps: {
          wirings: ['mcp']
        }
      }
    ]
  },
  // {
  //   type: 'category',
  //   label: 'Middleware',
  //   items: [{ dirName: 'middleware', type: 'autogenerated' }]
  // }, 
  {
    type: 'category',
    label: 'API',
    items: [{ dirName: 'api', type: 'autogenerated' }]
  }, {
    type: 'category',
    label: 'Comparisons',
    items: [{ dirName: 'comparison', type: 'autogenerated' }]
  }],
  guides: [
    'guides/authentication',
    'guides/yarn-workspaces'
  ]
};

export default sidebars;